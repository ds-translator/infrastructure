{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                "sts:GetCallerIdentity",
                "ec2:DescribeAvailabilityZones",
                "ec2:DescribeVpcs",
                "ec2:DescribeLaunchTemplates",
                "ec2:DescribeLaunchTemplateVersions",
                "ec2:DescribeNetworkAcls",
                "ec2:DescribeRouteTables",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeInternetGateways",
                "ec2:DescribeAddresses",
                "ec2:DescribeAddressesAttribute",
                "ec2:DescribeNatGateways",
                "eks:CreateCluster",
                "iam:GetOpenIDConnectProvider",
                "iam:TagOpenIDConnectProvider",
                "iam:GetPolicy",
                "iam:GetPolicyVersion"
            ],
            "Resource": "*"
        },
        {
            "Effect": "Allow",
            "Action": [
                "s3:ListBucket",
                "s3:GetBucketVersioning",
                "s3:GetEncryptionConfiguration",
                "s3:GetBucketPolicy",
                "s3:GetBucketPublicAccessBlock"
            ],
            "Resource": "arn:aws:s3:::${terraform_state_bucket}"
        },
        {
            "Effect": "Allow",
            "Action": [
                "dynamodb:DescribeTable",
                "dynamodb:PutItem",
                "dynamodb:GetItem",
                "dynamodb:DeleteItem"
            ],
            "Resource": "arn:aws:dynamodb:${aws_region}:${aws_caller_identity}:table/${terraform_locks_table}"
        },
        {
            "Effect": "Allow",
            "Action": [
                "s3:GetObject",
                "s3:GetObjectVersion"
            ],
            "Resource": "arn:aws:s3:::${terraform_state_bucket}/${environment}/launch-templates/terraform.tfstate"
        },
        {
            "Effect": "Allow",
            "Action": [
                "s3:GetObject",
                "s3:GetObjectVersion",
                "s3:ListMultipartUploadParts",
                "s3:PutObject"
            ],
            "Resource": "arn:aws:s3:::${terraform_state_bucket}/${environment}/networking/terraform.tfstate"
        },
        {
            "Effect": "Allow",
            "Action": [
                "s3:GetObject",
                "s3:GetObjectVersion"
            ],
            "Resource": "arn:aws:s3:::${terraform_state_bucket}/${environment}/security/terraform.tfstate"
        },
        {
            "Effect": "Allow",
            "Action": [
                "ec2:CreateVpc",
                "ec2:ModifyVpcAttribute",
                "ec2:DescribeVpcAttribute"
            ],
            "Resource": "arn:aws:ec2:${aws_region}:${aws_caller_identity}:vpc/*"
        },
        {
            "Effect": "Allow",
            "Action": [
                "ec2:CreateLaunchTemplate"
            ],
            "Resource": "arn:aws:ec2:${aws_region}:${aws_caller_identity}:launch-template/*"
        },
        {
            "Effect": "Allow",
            "Action": [
                "iam:CreateRole",
                "iam:GetRole",
                "iam:ListRolePolicies",
                "iam:ListAttachedRolePolicies",
                "iam:AttachRolePolicy",
                "iam:DetachRolePolicy",
                "iam:TagRole",
                "iam:TagPolicy",
                "iam:PassRole",
                "iam:ListInstanceProfilesForRole",
                "iam:DeleteRole"


            ],
            "Resource": [
                "arn:aws:iam::${aws_caller_identity}:role/${project_id}-${environment}-*",
                "arn:aws:iam::${aws_caller_identity}:policy/${project_id}-${environment}-*"
            ]

        },
        {
            "Effect": "Allow",
            "Action": [
                "ec2:CreateSubnet"
            ],
            "Resource": [
                "arn:aws:ec2:${aws_region}:${aws_caller_identity}:subnet/*",
                "arn:aws:ec2:${aws_region}:${aws_caller_identity}:vpc/*"
            ]
        },
        {
            "Effect": "Allow",
            "Action": [
                "ec2:CreateInternetGateway"
            ],
            "Resource": "arn:aws:ec2:${aws_region}:${aws_caller_identity}:internet-gateway/*"
        },
        {
            "Effect": "Allow",
            "Action": [
                "ec2:AttachInternetGateway"
            ],
            "Resource": [
                "arn:aws:ec2:${aws_region}:${aws_caller_identity}:internet-gateway/*",
                "arn:aws:ec2:${aws_region}:${aws_caller_identity}:vpc/*"
            ]
        },
        {
            "Effect": "Allow",
            "Action": [
                "ec2:ModifySubnetAttribute"
            ],
            "Resource": "arn:aws:ec2:${aws_region}:${aws_caller_identity}:subnet/*"
        },
        {
            "Effect": "Allow",
            "Action": [
                "ec2:CreateRouteTable"
            ],
            "Resource": [
                "arn:aws:ec2:${aws_region}:${aws_caller_identity}:route-table/*",
                "arn:aws:ec2:${aws_region}:${aws_caller_identity}:vpc/*"
            ]
        },
        {
            "Effect": "Allow",
            "Action": [
                "ec2:CreateRoute",
                "ec2:AssociateRouteTable"
            ],
            "Resource": "arn:aws:ec2:${aws_region}:${aws_caller_identity}:route-table/*"
        },
        {
            "Effect": "Allow",
            "Action": [
                "ec2:AllocateAddress"
            ],
            "Resource": "arn:aws:ec2:${aws_region}:${aws_caller_identity}:elastic-ip/*"
        },
        {
            "Effect": "Allow",
            "Action": [
                "ec2:CreateNatGateway"
            ],
            "Resource": [
                "arn:aws:ec2:${aws_region}:${aws_caller_identity}:natgateway/*",
                "arn:aws:ec2:${aws_region}:${aws_caller_identity}:subnet/*"
            ]
        },
        {
            "Effect": "Allow",
            "Action": [
                "s3:GetObject",
                "s3:GetObjectVersion",
                "s3:ListMultipartUploadParts",
                "s3:PutObject"
            ],
            "Resource": "arn:aws:s3:::${terraform_state_bucket}/${environment}/eks-cluster/terraform.tfstate"
        },
        {
            "Effect": "Allow",
            "Action": [
                "iam:PassRole"
            ],
            "Resource": "arn:aws:iam::${aws_caller_identity}:role/${project_id}-${environment}-eks-role"
        },
        {
            "Effect": "Allow",
            "Action": [
                "eks:DescribeCluster",
                "eks:CreateAccessEntry",
                "eks:DeleteCluster",
                "eks:TagResource"
            ],
            "Resource": "arn:aws:eks:${aws_region}:${aws_caller_identity}:cluster/${project_id}-${environment}-cluster"
        },
        {
            "Effect": "Allow",
            "Action": [
                "iam:CreateOpenIDConnectProvider",
                "iam:DeleteOpenIDConnectProvider"
            ],
            "Resource": "arn:aws:iam::${aws_caller_identity}:oidc-provider/*"
        },
        {
            "Effect": "Allow",
            "Action": [
                "s3:GetObject",
                "s3:GetObjectVersion",
				"s3:PutObject"
            ],
            "Resource": "arn:aws:s3:::${terraform_state_bucket}/${environment}/ng-frontend/terraform.tfstate"
        },
        {
            "Effect": "Allow",
            "Action": [
                "s3:GetObject",
                "s3:GetObjectVersion",
				"s3:PutObject"
            ],
            "Resource": "arn:aws:s3:::${terraform_state_bucket}/${environment}/ng-gpu/terraform.tfstate"
        },
        {
            "Effect": "Allow",
            "Action": [
                "eks:CreateNodegroup",
                "eks:DeleteNodegroup"
            ],
            "Resource": "arn:aws:eks:${aws_region}:${aws_caller_identity}:cluster/*"
        },
        {
            "Effect": "Allow",
            "Action": [
                "iam:PassRole"
            ],
            "Resource": "arn:aws:iam::${aws_caller_identity}:role/${project_id}-${environment}-eks-ng-role"
        },
        {
            "Effect": "Allow",
            "Action": [
                "eks:DescribeNodegroup",
                "eks:DeleteNodegroup"
            ],
            "Resource": "arn:aws:eks:${aws_region}:${aws_caller_identity}:nodegroup/*/${project_id}-${environment}-eks-ng-frontend/*"
        },
        {
            "Effect": "Allow",
            "Action": [
                "eks:DescribeNodegroup",
                "eks:DeleteNodegroup"
            ],
            "Resource": "arn:aws:eks:${aws_region}:${aws_caller_identity}:nodegroup/*/${project_id}-${environment}-eks-ng-gpu/*"
        },
        {
            "Effect": "Allow",
            "Action": [
                "s3:GetObject",
                "s3:GetObjectVersion"
            ],
            "Resource": "arn:aws:s3:::${terraform_state_bucket}/${environment}/alb/terraform.tfstate"
        },
        {
            "Effect": "Allow",
            "Action": [
                "iam:CreatePolicy"
            ],
            "Resource": "arn:aws:iam::${aws_caller_identity}:policy/*"
        },
        {
            "Sid": "AllowDescribeAccessEntry",
            "Effect": "Allow",
            "Action": [
                "eks:DescribeAccessEntry",
                "eks:DeleteAccessEntry",
                "eks:TagResource",
                "eks:AssociateAccessPolicy",
                "eks:ListAssociatedAccessPolicies",
                "eks:DisassociateAccessPolicy",
                "eks:ListAssociatedAccessPolicies"
            ],
            "Resource": "arn:aws:eks:${aws_region}:${aws_caller_identity}:access-entry/${project_id}-${environment}-cluster/user/${aws_caller_identity}/${project_id}-github/*"
        },
        {
            "Sid": "AllowLaunchInstancesWithTemplate",
            "Effect": "Allow",
            "Action": [
              "ec2:RunInstances",
              "ec2:DescribeLaunchTemplateVersions",
              "ec2:CreateTags"
            ],
            "Resource": [
              "arn:aws:ec2:${aws_region}:${aws_caller_identity}:launch-template/*",
              "arn:aws:ec2:${aws_region}:${aws_caller_identity}:launch-template/*/*"
            ]
        },
        {
            "Sid": "EC2FullAccess",
            "Effect": "Allow",
            "Action": "ec2:*",
            "Resource": "*"
        },
        {
            "Sid": "AllowLogAccess",
            "Effect": "Allow",
            "Action": [
                "logs:CreateLogGroup",
                "logs:TagResource",
                "logs:PutRetentionPolicy",
                "logs:DescribeLogGroups",
                "logs:ListTagsForResource",
                "logs:DeleteLogGroup"
            ],
            "Resource": "*"
        },
        {
            "Sid": "KmsAccess",
            "Effect": "Allow",
            "Action": [
                "kms:TagResource",
                "kms:CreateKey"
            ],
            "Resource": "*"
        }
    ]
}
